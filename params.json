{"name":"Simply-Deferred","body":"#Simply Deferred\r\n###Simplified jQuery Deferred API for Node and the browser\r\n\r\n##Installation\r\n    npm install simply-deferred\r\n\r\nIf you're on a browser, simply include \r\n    https://raw.github.com/sudhirj/simply-deferred/master/deferred.min.js\r\n\r\n##Usage\r\n    var Deferred = require('simply-deferred').Deferred;    \r\n    var rendering = new Deferred();\r\n    rendering.done(function(){\r\n        console.log('Finished rendering');\r\n    });\r\n    \r\n    //...\r\n    \r\n    rendering.resolve();\r\n    \r\n##API\r\nSimply Deferred is partially compatible with jQuery's API, so the [docs and usage](http://api.jquery.com/category/deferred-object/) are the same, except that they're restricted to the following methods:\r\n\r\n* `Deferred()`\r\n* `deferred.state()`\r\n* `deferred.done()`\r\n* `deferred.fail()`\r\n* `deferred.always()`\r\n* `deferred.promise()`\r\n* `deferred.resolve()`\r\n* `deferred.resolveWith()`\r\n* `deferred.rejectWith()`\r\n* `deferred.reject()`\r\n* `deferred.pipe()`\r\n* `deferred.then()`\r\n* `when()`\r\n\r\n###Usage with Zepto\r\nSimply Deffered also acts as a plugin to [Zepto](http://zeptojs.com/). The absence of a Deferred library was one of the biggest reasons I've been holding back, so I thought it made sense to write one. Once you have both Zepto and Simply Deferred on your page, just do `Deferred.installInto(Zepto)` to set it up. The installation makes the following changes to bring it closer to jQuery:\r\n\r\n* Aliases the `Deferred` constructor to `$.Deferred`.\r\n* Aliases the `when` method to `$.when`.\r\n* Wraps `$.ajax` to return a `promise`, which has only the following methods: `state()`, `done()`, `fail()` and `always()`. The arguments passed to the `done` and `fail` callbacks are the same ones passed to the `success` and `error` options.\r\n","google":"UA-27684561-2","tagline":"A deferred library for Node.js and the browser with a simplified jQuery API","note":"Don't delete this file! It's used internally to help with page regeneration."}